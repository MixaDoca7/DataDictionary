package DataDictionaryDSLLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class PredefinedDomen_Constraints extends BaseConstraintsDescriptor {
  public PredefinedDomen_Constraints() {
    super(CONCEPTS.PredefinedDomen$X$);
  }

  public static class Size_Property extends BasePropertyConstraintsDescriptor {
    public Size_Property(ConstraintsDescriptor container) {
      super(PROPS.size$_0Sh, container, false, false, true);
    }
    @Override
    public boolean validateValue(SNode node, Object propertyValue, CheckingNodeContext checkingNodeContext) {
      boolean result = staticValidateProperty(node, SPropertyOperations.castInteger(propertyValue));
      if (!(result) && checkingNodeContext != null) {
        checkingNodeContext.setBreakingNode(new SNodePointer("r:f2857333-d75c-4789-b303-4e75479d8895(DataDictionaryDSLLanguage.constraints)", "5320851523927676633"));
      }
      return result;
    }
    private static boolean staticValidateProperty(SNode node, int propertyValue) {
      return propertyValue >= 0;
    }
  }
  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(PROPS.size$_0Sh, new Size_Property(this));
    return properties;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept PredefinedDomen$X$ = MetaAdapterFactory.getConcept(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x1052e67ff6c57e8bL, "DataDictionaryDSLLanguage.structure.PredefinedDomen");
  }

  private static final class PROPS {
    /*package*/ static final SProperty size$_0Sh = MetaAdapterFactory.getProperty(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x1052e67ff6c57e8bL, 0x1052e67ff6c71f3aL, "size");
  }
}
