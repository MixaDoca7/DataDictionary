package DataDictionaryDSLLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAgregation = createDescriptorForAgregation();
  /*package*/ final ConceptDescriptor myConceptBetweenConstraint = createDescriptorForBetweenConstraint();
  /*package*/ final ConceptDescriptor myConceptCanBeNull = createDescriptorForCanBeNull();
  /*package*/ final ConceptDescriptor myConceptComparesonConstraint = createDescriptorForComparesonConstraint();
  /*package*/ final ConceptDescriptor myConceptConstraint = createDescriptorForConstraint();
  /*package*/ final ConceptDescriptor myConceptDomen = createDescriptorForDomen();
  /*package*/ final ConceptDescriptor myConceptExclusiveSpecialization = createDescriptorForExclusiveSpecialization();
  /*package*/ final ConceptDescriptor myConceptField = createDescriptorForField();
  /*package*/ final ConceptDescriptor myConceptInConstraint = createDescriptorForInConstraint();
  /*package*/ final ConceptDescriptor myConceptInValue = createDescriptorForInValue();
  /*package*/ final ConceptDescriptor myConceptNotNullConstraint = createDescriptorForNotNullConstraint();
  /*package*/ final ConceptDescriptor myConceptNullability = createDescriptorForNullability();
  /*package*/ final ConceptDescriptor myConceptPredefinedDomen = createDescriptorForPredefinedDomen();
  /*package*/ final ConceptDescriptor myConceptReference = createDescriptorForReference();
  /*package*/ final ConceptDescriptor myConceptRow = createDescriptorForRow();
  /*package*/ final ConceptDescriptor myConceptSemanticDomen = createDescriptorForSemanticDomen();
  /*package*/ final ConceptDescriptor myConceptSet = createDescriptorForSet();
  /*package*/ final ConceptDescriptor myConceptStructure = createDescriptorForStructure();
  /*package*/ final ConceptDescriptor myConceptStructureReference = createDescriptorForStructureReference();
  /*package*/ final ConceptDescriptor myConceptStructureRepository = createDescriptorForStructureRepository();
  /*package*/ final ConceptDescriptor myConceptTable = createDescriptorForTable();
  /*package*/ final ConceptDescriptor myConceptUnexclusiveSpecialization = createDescriptorForUnexclusiveSpecialization();
  /*package*/ final EnumerationDescriptor myEnumerationEnumDomens = new EnumerationDescriptor_EnumDomens();
  /*package*/ final EnumerationDescriptor myEnumerationEnumOperations = new EnumerationDescriptor_EnumOperations();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAgregation, myConceptBetweenConstraint, myConceptCanBeNull, myConceptComparesonConstraint, myConceptConstraint, myConceptDomen, myConceptExclusiveSpecialization, myConceptField, myConceptInConstraint, myConceptInValue, myConceptNotNullConstraint, myConceptNullability, myConceptPredefinedDomen, myConceptReference, myConceptRow, myConceptSemanticDomen, myConceptSet, myConceptStructure, myConceptStructureReference, myConceptStructureRepository, myConceptTable, myConceptUnexclusiveSpecialization);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Agregation:
        return myConceptAgregation;
      case LanguageConceptSwitch.BetweenConstraint:
        return myConceptBetweenConstraint;
      case LanguageConceptSwitch.CanBeNull:
        return myConceptCanBeNull;
      case LanguageConceptSwitch.ComparesonConstraint:
        return myConceptComparesonConstraint;
      case LanguageConceptSwitch.Constraint:
        return myConceptConstraint;
      case LanguageConceptSwitch.Domen:
        return myConceptDomen;
      case LanguageConceptSwitch.ExclusiveSpecialization:
        return myConceptExclusiveSpecialization;
      case LanguageConceptSwitch.Field:
        return myConceptField;
      case LanguageConceptSwitch.InConstraint:
        return myConceptInConstraint;
      case LanguageConceptSwitch.InValue:
        return myConceptInValue;
      case LanguageConceptSwitch.NotNullConstraint:
        return myConceptNotNullConstraint;
      case LanguageConceptSwitch.Nullability:
        return myConceptNullability;
      case LanguageConceptSwitch.PredefinedDomen:
        return myConceptPredefinedDomen;
      case LanguageConceptSwitch.Reference:
        return myConceptReference;
      case LanguageConceptSwitch.Row:
        return myConceptRow;
      case LanguageConceptSwitch.SemanticDomen:
        return myConceptSemanticDomen;
      case LanguageConceptSwitch.Set:
        return myConceptSet;
      case LanguageConceptSwitch.Structure:
        return myConceptStructure;
      case LanguageConceptSwitch.StructureReference:
        return myConceptStructureReference;
      case LanguageConceptSwitch.StructureRepository:
        return myConceptStructureRepository;
      case LanguageConceptSwitch.Table:
        return myConceptTable;
      case LanguageConceptSwitch.UnexclusiveSpecialization:
        return myConceptUnexclusiveSpecialization;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationEnumDomens, myEnumerationEnumOperations);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAgregation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "Agregation", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x6f4b224578073b01L);
    b.class_(false, false, false);
    // extends: DataDictionaryDSLLanguage.structure.Structure
    b.super_(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x6f4b224578073afdL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/8019541243225127681");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBetweenConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "BetweenConstraint", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691def413L);
    b.class_(false, false, false);
    // extends: DataDictionaryDSLLanguage.structure.Constraint
    b.super_(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691def411L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/1684961122012034067");
    b.version(3);
    b.property("number1", 0x17622f3691defa92L).type(PrimitiveTypeId.INTEGER).origin("1684961122012035730").done();
    b.property("number2", 0x17622f3691defa94L).type(PrimitiveTypeId.INTEGER).origin("1684961122012035732").done();
    b.alias("BETWEEN");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCanBeNull() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "CanBeNull", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691fc535fL);
    b.class_(false, false, false);
    // extends: DataDictionaryDSLLanguage.structure.Nullability
    b.super_(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691f9b4d4L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/1684961122013959007");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForComparesonConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "ComparesonConstraint", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f369202b9daL);
    b.class_(false, false, false);
    // extends: DataDictionaryDSLLanguage.structure.Constraint
    b.super_(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691def411L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/1684961122014378458");
    b.version(3);
    b.property("number1", 0x17622f369202b9dcL).type(PrimitiveTypeId.INTEGER).origin("1684961122014378460").done();
    b.property("operation", 0x17622f369202b9deL).type(MetaIdFactory.dataTypeId(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f369202b9e2L)).origin("1684961122014378462").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "Constraint", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691def411L);
    b.class_(false, false, false);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/1684961122012034065");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDomen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "Domen", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691ebb513L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2f16f1b357e19f43L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/1684961122012869907");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExclusiveSpecialization() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "ExclusiveSpecialization", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x6f4b224578078449L);
    b.class_(false, false, false);
    // extends: DataDictionaryDSLLanguage.structure.Structure
    b.super_(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x6f4b224578073afdL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/8019541243225146441");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForField() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "Field", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x6f4b22457807455dL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/8019541243225130333");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "InConstraint", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691defac0L);
    b.class_(false, false, false);
    // extends: DataDictionaryDSLLanguage.structure.Constraint
    b.super_(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691def411L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/1684961122012035776");
    b.version(3);
    b.aggregate("values", 0x17622f3691e2b811L).target(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691e2b810L).optional(false).ordered(true).multiple(true).origin("1684961122012280849").done();
    b.alias("IN");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "InValue", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691e2b810L);
    b.class_(false, false, false);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/1684961122012280848");
    b.version(3);
    b.property("value", 0x17622f3691e3d746L).type(PrimitiveTypeId.INTEGER).origin("1684961122012354374").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNotNullConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "NotNullConstraint", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691f9b4daL);
    b.class_(false, false, false);
    // extends: DataDictionaryDSLLanguage.structure.Nullability
    b.super_(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691f9b4d4L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/1684961122013787354");
    b.version(3);
    b.alias("NOT NULL");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNullability() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "Nullability", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691f9b4d4L);
    b.class_(false, false, false);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/1684961122013787348");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPredefinedDomen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "PredefinedDomen", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x1052e67ff6c57e8bL);
    b.class_(false, false, false);
    // extends: DataDictionaryDSLLanguage.structure.Domen
    b.super_(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691ebb513L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/1176255889972493963");
    b.version(3);
    b.property("type", 0x1052e67ff6c57e8cL).type(MetaIdFactory.dataTypeId(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x1052e67ff6c46943L)).origin("1176255889972493964").done();
    b.property("size", 0x1052e67ff6c71f3aL).type(PrimitiveTypeId.INTEGER).origin("1176255889972600634").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "Reference", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x1052e67ff6c6005eL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/1176255889972527198");
    b.version(3);
    b.associate("reference", 0x1052e67ff6c6005fL).target(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x6f4b22457807455dL).optional(false).origin("1176255889972527199").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRow() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "Row", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x1052e67ff6c3eed4L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/1176255889972391636");
    b.version(3);
    b.aggregate("rowData", 0x1052e67ff6c57e85L).target(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x1052e67ff6c6005eL).optional(false).ordered(true).multiple(false).origin("1176255889972493957").done();
    b.aggregate("rowValue", 0x1052e67ff6c57e87L).target(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691ebb513L).optional(true).ordered(true).multiple(false).origin("1176255889972493959").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSemanticDomen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "SemanticDomen", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691ebb512L);
    b.class_(false, false, false);
    // extends: DataDictionaryDSLLanguage.structure.Domen
    b.super_(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691ebb513L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/1684961122012869906");
    b.version(3);
    b.property("type", 0x17622f3691ebcea2L).type(MetaIdFactory.dataTypeId(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x1052e67ff6c46943L)).origin("1684961122012876450").done();
    b.property("size", 0x17622f3691ebcea4L).type(PrimitiveTypeId.INTEGER).origin("1684961122012876452").done();
    b.aggregate("constraints", 0x17622f3691ebcea0L).target(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691def411L).optional(true).ordered(true).multiple(true).origin("1684961122012876448").done();
    b.aggregate("nullability", 0x17622f3691f9b4d6L).target(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x17622f3691f9b4d4L).optional(true).ordered(true).multiple(false).origin("1684961122013787350").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSet() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "Set", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x1052e67ff6c07d59L);
    b.class_(false, false, false);
    // extends: DataDictionaryDSLLanguage.structure.Structure
    b.super_(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x6f4b224578073afdL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/1176255889972165977");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStructure() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "Structure", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x6f4b224578073afdL);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/8019541243225127677");
    b.version(3);
    b.aggregate("fields", 0x6f4b224578074563L).target(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x6f4b22457807455dL).optional(true).ordered(true).multiple(true).origin("8019541243225130339").done();
    b.aggregate("table", 0x250a48a34a7f0842L).target(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x1052e67ff6c3eec2L).optional(false).ordered(true).multiple(false).origin("2669025595337148482").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStructureReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "StructureReference", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x6f4b22457808af51L);
    b.class_(false, false, false);
    // extends: DataDictionaryDSLLanguage.structure.Field
    b.super_(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x6f4b22457807455dL);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/8019541243225222993");
    b.version(3);
    b.associate("structureRef", 0x6f4b22457808af54L).target(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x6f4b224578073afdL).optional(false).origin("8019541243225222996").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStructureRepository() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "StructureRepository", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x6f4b224578073e21L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/8019541243225128481");
    b.version(3);
    b.aggregate("structures", 0x6f4b224578073e24L).target(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x6f4b224578073afdL).optional(true).ordered(true).multiple(true).origin("8019541243225128484").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "Table", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x1052e67ff6c3eec2L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/1176255889972391618");
    b.version(3);
    b.aggregate("rows", 0x1052e67ff6c3eed1L).target(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x1052e67ff6c3eed4L).optional(true).ordered(true).multiple(true).origin("1176255889972391633").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnexclusiveSpecialization() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryDSLLanguage", "UnexclusiveSpecialization", 0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0xd2d707c97ae7ba8L);
    b.class_(false, false, false);
    // extends: DataDictionaryDSLLanguage.structure.Structure
    b.super_(0xc81a5de5c82046dcL, 0xb13e1fa2a0dad109L, 0x6f4b224578073afdL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1cb3074c-56f2-4794-a3fe-4907548a0a91(DataDictionaryDSLLanguage.structure)/949538776868092840");
    b.version(3);
    return b.create();
  }
}
